const path = require("path");
const webpack = require("webpack");
const HtmlWebpackPlugin = require("html-webpack-plugin");
const htmlWebpackPlugin = new HtmlWebpackPlugin({
    template: path.join(__dirname, "examples/src/index.html"),
    filename: "./index.html",
    chunksSortMode: "none" // fixes the cyclic dependency issue
});
/* const MiniCssExtractPlugin = require("mini-css-extract-plugin"); */

module.exports = () => {
    return {
        context: path.resolve(__dirname, "src"),
        entry: path.join(__dirname, "examples/src/index.js"),
        /* output: { */
        /*     path: path.resolve(__dirname, "dist"), */
        /*     filename: "bundle.js", */
        /*     publicPath: "/" // use with historyApiFallback */
        /* libraryTarget: "commonjs2" */
        /* }, */
        devtool: "source-map",
        resolve: {
            alias: { "react-dom": "@hot-loader/react-dom" },
            extensions: [".mjs", ".js", ".jsx"] // common extensions
        },
        module: {
            rules: [
                /* { */
                /*     test: /\.html$/, */
                /*     exclude: /node_modules/, */
                /*     loader: "html-loader" */
                /* }, */
                {
                    test: /\.mjs$/,
                    include: /node_modules/,
                    type: "javascript/auto"
                },
                {
                    test: /\.jsx?$/,
                    exclude: /node_modules/,
                    use: ["babel-loader"]
                },
                {
                    test: /\.js$/,
                    exclude: /node_modules/,
                    use: {
                        loader: "babel-loader"
                    }
                },
                {
                    test: /\.css$/,
                    // exclude: /node_modules/,
                    use: ["style-loader", "css-loader"]
                },
                {
                    test: /\.(jpe?g|png|gif|svg|ico|mp3)$/i,
                    use: [
                        {
                            loader: "url-loader",
                            options: {
                                limit: 8192
                            }
                        }
                    ]
                },
                {
                    test: /\.(eot|ttf|woff|woff2)$/,
                    use: [
                        // DO NOT cache this
                        {
                            loader: "file-loader",
                            options: {
                                name: "[name].[ext]"
                            }
                        }
                    ]
                },
                {
                    test: /react-icons\/(.)*(.js)$/,
                    use: ["babel-loader"]
                },
                {
                    test: /\.scss$/,
                    use: [
                        "style-loader",
                        /* MiniCssExtractPlugin.loader, */
                        "css-loader",
                        "sass-loader"
                    ]
                }
            ]
        },

        plugins: [
            /* new MiniCssExtractPlugin({ */
            /*     filename: "main.css", */
            /*     filename: "carousel.css" */
            /* }), */
            htmlWebpackPlugin,
            new webpack.ProgressPlugin()
        ]
    };
};
